- hosts: jvsc
  tasks:
    - name: Setup HTTPS
      shell: |
        openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=jvsc/O=Test LTD./C=UA'
        openssl pkcs12 -inkey key.pem -in cert.pem -export -out keys.pkcs12 -passout pass:testtest
        yes | keytool -importkeystore -srckeystore keys.pkcs12 -storepass 'testtest' -srcstoretype pkcs12 -destkeystore keystore -srcstorepass 'testtest'
        sudo cp ./keystore /var/lib/jenkins/jenkins.jks

    - name: Enable HTTPS in Jenkins config
      lineinfile:
        dest: /etc/default/jenkins
        line: 'JENKINS_ARGS="--httpPort=-1 --httpsPort=8080 --httpsKeyStore=/var/lib/jenkins/jenkins.jks --httpsKeyStorePassword=testtest"'
        owner: jenkins
        state: present
        insertafter: EOF
        create: True

    - name: Restart Jenkins service to apply the changes
      service:
        name: jenkins
        state: restarted
    
    - name: Install unzip
      apt:
        name: unzip

    - name: Download Vault
      get_url:
        url: https://releases.hashicorp.com/vault/1.1.3/vault_1.1.3_linux_amd64.zip
        dest: /tmp
    
    - name: Unarchive a file that is already on the remote machine
      unarchive:
        src: /tmp/vault_1.1.3_linux_amd64.zip
        dest: /home/vagrant
        remote_src: yes

    - name: Vaut autocomplete-install
      command: ./vault -autocomplete-install
      ignore_errors: yes

    - name: Copy vault.hcl
      copy:
        src: confs/vault.hcl
        dest: /home/vagrant/vault.hcl
        owner: vagrant
        group: vagrant

    - name: Copy vault service to the server
      copy: src=confs/vault.service dest=/etc/systemd/system/vault.service
      become: true

    - name: Start vault service
      systemd:
        state: restarted
        name: vault
        daemon_reload: yes
      become: true

    - pause:
        seconds: 5

    - name: Initialize the vault
      command: ./vault operator init -key-shares=1 -key-threshold=1 -tls-skip-verify
      register: keys
      environment:
        VAULT_ADDR: "https://127.0.0.1:8200"
      ignore_errors: yes

    - debug: msg="{{ keys.stdout_lines }}"

    - name: Unseal the vault
      command: ./vault operator unseal -tls-skip-verify {{ keys.stdout_lines[0].split(':')[1] }}
      ignore_errors: yes

    - name: Vault log in
      command: ./vault login -tls-skip-verify {{ keys.stdout_lines[2].split(':')[1] }}
      ignore_errors: yes
    
    - name: Enable secrets on jenkins path
      command: ./vault secrets enable -tls-skip-verify -path=jenkins/ kv

    - name: Save jks user credentials into vault
      command: ./vault kv put -tls-skip-verify jenkins/user jks=Password1

    - name: Get jks user credentials from vault
      command: ./vault kv get -tls-skip-verify -field=jks jenkins/user
      register: jks_pwd
    - debug: msg="{{ jks_pwd.stdout }}"

    - name: Create jks user
      shell: echo 'jenkins.model.Jenkins.instance.securityRealm.createAccount("jks", "{{ jks_pwd.stdout }}")' | java -jar /opt/jenkins-cli.jar -noCertificateCheck -s "https://localhost:8080" -auth admin:admin groovy = â€“

    - name: Copy Capistrano configs to the server
      copy:
        src: confs/Capistrano
        dest: /home/vagrant
        owner: vagrant
        group: vagrant

    - name: Install ruby-bundler
      apt:
        name: ruby-bundler
    
    - name: Install composer and php packages
      apt: name={{item}} state=present
      with_items:
          - composer
          - php-sqlite3
          - php-mbstring
          - php-dom
          - php-intl

    - name: Generate and add ssh keys
      remote_user: vagrant
      sudo: true
      shell: |
        ssh-keygen -f /home/vagrant/.ssh/id_rsa -N ''
        cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
        cp -r /home/vagrant/.ssh /var/lib/jenkins
        chown -R jenkins /var/lib/jenkins/.ssh

    - name: Setup Capistrano and Symfony client
      remote_user: vagrant
      sudo: false
      shell: |
        mkdir -p /home/vagrant/tst-symf-demo/shared/app/config
        touch tst-symf-demo/shared/app/config/parameters.yml
        cd /home/vagrant/Capistrano
        bundle install
        wget https://get.symfony.com/cli/installer -O - | bash

    - name: Recursively change ownership of a directory
      file:
        path: /home/vagrant/Capistrano
        state: directory
        recurse: yes
        owner: jenkins
        group: vagrant

    - name: Create Jenkins jobs
      remote_user: vagrant
      sudo: false
      shell: |
        java -jar /opt/jenkins-cli.jar -noCertificateCheck -s https://localhost:8080/ -auth jks:{{ jks_pwd.stdout }} create-job testCapistranoSymfony < /home/vagrant/Capistrano/template1.xml
        java -jar /opt/jenkins-cli.jar -noCertificateCheck -s https://localhost:8080/ -auth jks:{{ jks_pwd.stdout }} create-job tstRevokeJksUser < /home/vagrant/Capistrano/template2.xml
      
    - name: Queue build of the project in Jenkins and delete jks user after successful build
      remote_user: vagrant
      sudo: false
      shell: curl -k -X POST https://localhost:8080/job/testCapistranoSymfony/build?token=tstCapistranoSymfony -u jks:{{ jks_pwd.stdout }}

    